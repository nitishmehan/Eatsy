import { NextResponse } from 'next/server';
import dbConnect from '@/lib/mongodb';
import Order from '@/models/Order';
import { getUserFromRequest } from '@/lib/auth';

export async function POST(request) {
  try {
    const user = getUserFromRequest(request);
    if (!user || user.role !== 'customer') {
      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
    }

    await dbConnect();
    const { vendorId, items, total, deliveryAddress } = await request.json();

    console.log('Order data:', { vendorId, items, total, deliveryAddress }); // Debug log

    if (!vendorId || !items || items.length === 0 || !total || !deliveryAddress) {
      return NextResponse.json({ 
        error: 'Missing required fields',
        details: {
          vendorId: !!vendorId,
          items: items?.length > 0,
          total: !!total,
          deliveryAddress: !!deliveryAddress
        }
      }, { status: 400 });
    }

    // Create order
    const order = await Order.create({
      userId: user.userId,
      vendorId,
      items,
      total,
      deliveryAddress,
      paymentMethod: 'cash',
      status: 'delivered' // Directly mark as delivered for MVP
    });

    // order._id is now available (auto-generated by MongoDB)
    return NextResponse.json({ 
      message: 'Order placed successfully',
      order: {
        _id: order._id.toString(),
        status: order.status
      }
    }, { status: 201 });

  } catch (error) {
    console.error('Create order error:', error);
    return NextResponse.json({ error: 'Failed to create order' }, { status: 500 });
  }
}
